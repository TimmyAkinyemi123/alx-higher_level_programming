Instructions on 2-matrix_divided.py
==============================

This module divides all the elements of the matrix ``matrix_divided(matrix, div)``.

The function returns a new matrix
::
Import the function
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Check for correct output: All elements of the matrix should be divided by div, rounded to 2 decimal places

Integers
::
    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Floating-point numbers.
::

    >>> matrix = [
    ...     [1.1, -2.2, 3.3],
    ...     [4.4, 5.5, -6.6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

Integers and floats
::

    >>> matrix = [
    ...     [1, -2.2, 3, 4.4, 5],
    ...     [-6.6, 7.00, 8, 9.999, 10]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]


Check for correct data type of Matrices
The parameter ``matrix`` must be a list of lists consisting of either ints or floats. If ``matrix`` is not a list, a TypeError is raised.

::

    >>> matrix = "string"
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check if list is empty
::

    >>> matrix = None
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    >>> matrix = []
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check if ``matrix`` is empty list of lists.
::

    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 3))
    [[]]

Check if ``matrix`` list of lists
::

    >>> matrix = [1, 2, 3]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check if ``matrix`` elements are ints or floats
::

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, "string", 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Check if all the rows in ``matrix`` are the same size. Otherwise, a TypeError is raised.
::

    >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Check if ``div`` is an int or float. Otherwise, a TypeError
is raised.
::

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, "not a number"))
    Traceback (most recent call last):
    TypeError: div must be a number

::

    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number

Check if ``div`` is a non-zero number. Otherwise, a ZeroDivisionError is raised.
::

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero